version: '3' # 컴포즈 버전, 현재 최신 버전
services: # 인스턴스를 띄울 서비스를 리스트 형식으로 적어줄 수 있음
  zookeeper: # 주키퍼 인스턴스
    image: zookeeper:3.7 # 이미지, 도커 허브의 주키퍼 오피셜 이미지를 사용
    hostname: zookeeper
    ports: # 버츄얼 도커 인스턴스와 로컬 컴퓨터를 이어주는 포트 설정 필요
      - "2181:2181" # 직접 코딩을 하며 사용할 수 있음
    environment: # 여러가지 설정
      ZOO_MY_ID: 1 # 주키퍼의 ID
      ZOO_PORT: 2181 # 주키퍼의 포트
      # ZOO_SERVERS: server.1=zookeeper:2888:3888 # 주키퍼의 서버 -> 삭제, 주키퍼 인스턴스를 하나만 사용하기 때문에 지워도 상관 없음
    volumes: # 파일을 공유할 폴더를 입력
      - ./data/zookeeper/data:/data # 버츄얼 환경 안에서 생기는 폴더
      - ./data/zookeeper/datalog:/datalog # : 뒷단은 로컬에서도 접근할 수 있는 폴더, 로그
  kafka1:
    image: confluentinc/cp-kafka:7.0.0 # 카프카를 만든 팀이 나와서 새로 설립한 회사(엄청 큼)
    hostname: kafka1
    ports:
      - "9091:9091" # 카프카 서버가 세개이기 때문에 각각의 포트가 필요
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091 # 도커를 이용할 때 설정
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181" # 주키퍼와 연결
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka1/data:/tmp/kafka-logs # 주키퍼와 동일하게 로그가 작성되는 경로 지정
    depends_on:
      - zookeeper # 주키퍼가 먼저 실행되기 위한 의존성을 생성
  kafka2:
    image: confluentinc/cp-kafka:7.0.0
    hostname: kafka2
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka2/data:/tmp/kafka-logs
    depends_on:
      - zookeeper
  kafka3:
    image: confluentinc/cp-kafka:7.0.0
    hostname: kafka3
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka3/data:/tmp/kafka-logs
    depends_on:
      - zookeeper
  kafdrop:
    image: obsidiandynamics/kafdrop # 도커 허브의 이미지를 사용
    restart: "no"
    ports: 
      - "9000:9000"
    environment:
      KAFKA_BROKER_CONNECT: "kafka1:19091" # 카프카 하나만 넣으면 됨
    depends_on: # 카프카 1-3이 모두 실행된 뒤 실행되도록 의존성 추가
      - kafka1
      - kafka2
      - kafka3